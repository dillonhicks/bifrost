#!/usr/bin/env python
import flask
import logging

from bifrost.externalproxytunnel import ExternalProxyTunnel

LOG = logging.getLogger(__name__)


class MyApplication(object):
    def __init__(self, name, port=5001):
        self.port = port
        self.name = name

    def init(self):
        app = flask.Flask(__name__)
        app.add_url_rule('/my-webhook',
                         view_func=self.webhook,
                         methods=['GET', 'POST'])
        app.add_url_rule('/do-error',
                         view_func=self.error,
                         methods=['GET', 'POST', 'PATCH', 'DELETE', 'HEAD'])
        return app


    def webhook(self):
        return flask.jsonify(dict(callback_data=flask.request.get_data(as_text=True), server=self.name))

    def error(self):
        raise RuntimeError('BOGUS')

    def start(self):
        app = self.init()
        app.run('0.0.0.0', self.port)



if __name__ == '__main__':
    import sys
    from colored import fore, style, back

    logging.basicConfig(level=logging.INFO)
    port, subdomain = sys.argv[1:]

    with ExternalProxyTunnel(subdomain, local_port=port) as proxy_url:
        print()
        print(back.GREEN + fore.WHITE + style.BOLD + f'External proxy: {proxy_url}' + style.RESET)
        print()

        MyApplication(subdomain, port).start()

